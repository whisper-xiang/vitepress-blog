#user  nobody; // 设置Nginx进程的用户
worker_processes  1; // 设置工作进程数

#error_log  logs/error.log; // 错误日志文件路径
#error_log  logs/error.log  notice; // 设置错误日志的级别为notice
#error_log  logs/error.log  info; // 设置错误日志的级别为info

#pid        logs/nginx.pid; // PID文件路径

events {
    worker_connections  1024; // 每个工作进程可以处理的最大连接数
}

http {
    include       mime.types; // 包含MIME类型文件
    default_type  application/octet-stream; // 设置默认MIME类型

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"'; // 定义日志格式
    #access_log  logs/access.log  main; // 访问日志文件路径和格式

    sendfile        on; // 启用sendfile
    #tcp_nopush     on; // 启用tcp_nopush

    #keepalive_timeout  0; // 设置长连接超时时间为0
    keepalive_timeout  65; // 设置长连接超时时间为65秒

    #gzip  on; // 启用gzip压缩

    server {
        listen       8080; // 监听端口
        server_name  localhost; // 服务器名

        #charset koi8-r; // 字符集

        #access_log  logs/host.access.log  main; // 访问日志文件路径和格式

        location / {
            root   html; // 文档根目录
            index  index.html index.htm; // 默认首页文件
        }

        #error_page  404              /404.html; // 错误页面

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html; // 错误页面
        location = /50x.html {
            root   html; // 文档根目录
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*; // 包含其他服务器配置文件
}
